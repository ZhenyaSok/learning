# Задача - Параллельная обработка числовых данных
# азработайте программу, которая выполняет следующие шаги:
#
# Сбор данных:
#
# Создайте функцию generate_data(n), которая генерирует список из n случайных целых чисел в
# диапазоне от 1 до 1000. Например, generate_data(1000000) должна вернуть список из 1 миллиона случайных чисел.
#
# Обработка данных:
# Напишите функцию process_number(number), которая выполняет вычисления над числом.
# Например, вычисляет факториал числа или проверяет, является ли число простым.
# Обратите внимание, что обработка должна быть ресурсоёмкой, чтобы продемонстрировать преимущества мультипроцессинга.
#
# Параллельная обработка:
#
# Используйте модули multiprocessing и concurrent.futures для параллельной обработки списка чисел.
#
# Реализуйте три варианта:
#
# Вариант А: Ипользование пула потоков с concurrent.futures.
# Вариант Б: Использование multiprocessing.Pool с пулом процессов, равным количеству CPU.
# Вариант В: Создание отдельных процессов с использованием multiprocessing.
# Process и очередей (multiprocessing.Queue) для передачи данных.

# Сравнение производительности:
# Измерьте время выполнения для всех вариантов и сравните их с однопоточным (однопроцессным) вариантом.
# Представьте результаты в виде таблицы или графика.
# Сохранение результатов:
# Сохраните обработанные данные в файл (например, в формате JSON или CSV).